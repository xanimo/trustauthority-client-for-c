# Copyright (C) 2023 Intel Corporation
# SPDX-License-Identifier: BSD-3-Clause
ARG VERSION=v0.0.0
ARG COMMIT=fffffff
ARG DCAP_VERSION=1.21.100.3-jammy1
ARG PSW_VERSION=2.22.100.3

FROM ubuntu:22.04 as dependencies
ARG DEBIAN_FRONTEND=noninteractive
ARG ENABLE_DEBUG
ARG DCAP_VERSION
ARG PSW_VERSION

RUN apt-get update \
    && apt-get upgrade -y \
    && apt-get install -y --no-install-recommends gnupg \
    wget \
    git \
    autoconf \
    automake \
    libtool \
    openssl \
    libssl-dev \
    pkg-config \
    cmake \
    libjansson-dev \
    build-essential \
    ca-certificates \
    autoconf-archive \
    libltdl-dev \
    libjson-c-dev \
    libcurl4-openssl-dev \
    uuid-dev \
    libgnutls28-dev

RUN echo 'deb [arch=amd64] https://download.01.org/intel-sgx/sgx_repo/ubuntu jammy main' > /etc/apt/sources.list.d/intel-sgx.list
RUN wget https://download.01.org/intel-sgx/sgx_repo/ubuntu/intel-sgx-deb.key -O /tmp/intel-sgx-deb.key; \
    apt-key add /tmp/intel-sgx-deb.key; \
    rm /tmp/intel-sgx-deb.key
RUN apt-get autoremove -y

RUN git clone https://github.com/benmcollins/libjwt.git 
WORKDIR /libjwt 
RUN git checkout v1.17.0 && autoreconf -i && ./configure --without-openssl && make all && make install

WORKDIR /
RUN git clone https://github.com/tpm2-software/tpm2-tss.git
WORKDIR /tpm2-tss
RUN git checkout 4.0.1 && ./bootstrap && ./configure && make install

WORKDIR /opt/intel
RUN wget -q https://download.01.org/intel-sgx/sgx-linux/2.22/distro/ubuntu22.04-server/sgx_linux_x64_sdk_${PSW_VERSION}.bin; \
    chmod +x sgx_linux_x64_sdk_${PSW_VERSION}.bin; \
    echo 'yes' | ./sgx_linux_x64_sdk_${PSW_VERSION}.bin
RUN apt-get update && apt-get install -y --no-install-recommends \
    libsgx-qe3-logic \
    libsgx-pce-logic \
    libsgx-dcap-ql \
    libsgx-dcap-ql-dev \
    libtdx-attest-dev \
    libtdx-attest \
    cmake \
    libcurl4-openssl-dev

FROM dependencies as build
ARG USERNAME=intel
ARG USER_UID=2000
ARG USER_GID=$USER_UID

RUN groupadd --gid $USER_GID $USERNAME \
    && useradd --uid $USER_UID --gid $USER_GID -m $USERNAME
USER $USERNAME
WORKDIR /trustauthority-client/
COPY . .
WORKDIR /trustauthority-client/build
RUN cmake -DBUILD_SGX=ON -DBUILD_TDX=ON -DCMAKE_BUILD_TYPE=$ENABLE_DEBUG .. \
	&& cmake --build .

FROM scratch as export-stage
COPY --from=build /trustauthority-client/build/src/connector/libtrustauthority_connector.a .
COPY --from=build /trustauthority-client/build/src/sgx/libtrustauthority_sgx.a .
COPY --from=build /trustauthority-client/build/src/tdx/intel/libtrustauthority_tdx.a .
COPY --from=build /trustauthority-client/build/src/tdx/azure/libtrustauthority_tdx_azure.a .
COPY --from=build /trustauthority-client/build/src/token_provider/libtrustauthority_token_provider.a .
COPY --from=build /trustauthority-client/build/src/token_verifier/libtrustauthority_token_verifier.a .

FROM ubuntu:22.04 as test-image
ARG DEBIAN_FRONTEND=noninteractive
ARG USERNAME=intel
ARG USER_UID=2000
ARG USER_GID=$USER_UID
RUN groupadd --gid $USER_GID $USERNAME \
    && useradd --uid $USER_UID --gid $USER_GID -m $USERNAME
RUN apt-get update &&  apt-get install -y --no-install-recommends \
    cmake \
    g++ \
    lcov \
    autoconf \
    automake \
    libtool \
    libcurl4-openssl-dev \
    libssl-dev \
    git \
    libcpprest-dev \
    libjansson-dev \ 
    build-essential \ 
    ca-certificates \
    googletest \
    pkg-config \
    libgtest-dev \
    libgnutls28-dev

RUN git clone https://github.com/benmcollins/libjwt.git 
WORKDIR /libjwt 
RUN git checkout v1.17.0 && autoreconf -i && ./configure --without-openssl && make all && make install

USER $USERNAME
WORKDIR /trustauthority-client/
COPY . .
WORKDIR /trustauthority-client/tests/build
RUN  cmake .. &&  cmake --build . 
RUN env LD_LIBRARY_PATH=/trustauthority-client:/usr/local/lib/ ./trustauthorityclienttest 
RUN lcov -o /tmp/coverage.info -c -d /trustauthority-client/tests/build/CMakeFiles/trustauthorityclienttest.dir 
RUN lcov --extract /tmp/coverage.info '/trustauthority-client/src/*' --output-file /tmp/filtered_coverage.info
